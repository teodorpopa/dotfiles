// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  "theme": "Gruvbox Dark",
  "vim_mode": true,
  "relative_line_numbers": true,
  "vertical_scroll_margin": 0,
  "ui_font_size": 18,
  "buffer_font_size": 17,
  "buffer_font_family": "Mononoki Nerd Font Mono",
  "ui_font_features": {
    "calt": true
  },
  "ensure_final_newline_on_save": false,
  "centered_layout": {
    "left_padding": 0.4,
    "right_padding": 0.4
  },
  "current_line_highlight": "gutter",
  "cursor_blink": false,
  "scrollbar": {
    "show": "auto",
    "cursors": true,
    "git_diff": true,
    "search_results": true,
    "selected_symbol": true,
    "diagnostics": true
  },
  "tab_bar": {
    "show": true,
    "show_nav_history_buttons": false
  },
  "tabs": {
    "git_status": true,
    "file_icons": true
  },
  "toolbar": {
    "breadcrumbs": true,
    "quick_actions": true
  },
  "format_on_save": "on",
  "formatter": "language_server",
  "hour_format": "hour24",
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },
  "terminal": {
    "toolbar": {
      "title": false
    }
  },
  "project_panel": {
    "button": true,
    "default_width": 260,
    "dock": "left",
    "file_icons": true,
    "folder_icons": true,
    "git_status": true,
    "indent_size": 25,
    "auto_reveal_entries": true,
    "auto_fold_dirs": true,
    "scrollbar": {
      "show": "always"
    }
  },
  "unnecessary_code_fade": 0.7,
  "lsp": {
    "rust-analyzer": {
      "initialization_options": {
        "check": {
          "command": "clippy"
        },
        "completion": {
          "snippets": {
            "custom": {
              "Arc::new": {
                "postfix": "arc",
                "body": [
                  "Arc::new(${receiver})"
                ],
                "requires": "std::sync::Arc",
                "scope": "expr"
              },
              "Some": {
                "postfix": "some",
                "body": [
                  "Some(${receiver})"
                ],
                "scope": "expr"
              },
              "Ok": {
                "postfix": "ok",
                "body": [
                  "Ok(${receiver})"
                ],
                "scope": "expr"
              },
              "Rc::new": {
                "postfix": "rc",
                "body": [
                  "Rc::new(${receiver})"
                ],
                "requires": "std::rc::Rc",
                "scope": "expr"
              },
              "Box::pin": {
                "postfix": "boxpin",
                "body": [
                  "Box::pin(${receiver})"
                ],
                "requires": "std::boxed::Box",
                "scope": "expr"
              },
              "vec!": {
                "postfix": "vec",
                "body": [
                  "vec![${receiver}]"
                ],
                "description": "vec![]",
                "scope": "expr"
              }
            }
          }
        }
      }
    },
    "gopls": {
      "initialization_options": {
        "hints": {
          "assignVariableTypes": true,
          "compositeLiteralFields": true,
          "compositeLiteralTypes": true,
          "constantValues": true,
          "functionTypeParameters": true,
          "parameterNames": true,
          "rangeVariableTypes": true
        }
      }
    }
  }
}